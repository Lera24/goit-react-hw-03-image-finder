{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/Message/Message.module.css","components/ImageGallery/ImageGallery.module.css","components/Spiner/Spiner.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","store/request.js","components/Button/Button.js","components/Spiner/Spiner.js","components/Modal/Modal.js","components/Message/Message.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","value","handleChange","e","setState","target","handleSubmit","preventDefault","props","onSubmitForm","this","className","css","searchbar","searchForm","onSubmit","type","onInput","placeholder","Component","ImageGalerryItem","webformatURL","onSelectImg","largeImageURL","imageGalleryItem","onClick","src","alt","ImageGallery","images","onSelectedImg","imageGallery","map","img","id","searchImg","input","page","fetch","Button","wrap","button","Spiner","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","handleClickModal","currentTarget","window","addEventListener","disableBodyScroll","removeEventListener","enableBodyScroll","createPortal","overlay","modal","largeImg","Message","error","title","App","status","resetPageNumber","updatePageNumber","prevState","scrollTo","top","documentElement","scrollHeight","behavior","onSearchValueInput","onFoundLargeImg","onResetLargeImg","prevProps","inputPrev","pagePrev","imagesPrev","then","res","json","total","hits","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c669545b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__3r7Vl\",\"imageGalleryItem-image\":\"ImageGalleryItem_imageGalleryItem-image__1ulo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Button_wrap__2np_e\",\"button\":\"Button_button__36HeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2jT1v\",\"modal\":\"Modal_modal__FYFy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Message_wrap__2jqZE\",\"title\":\"Message_title__2am31\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3Attr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Spiner_wrap__NhZLp\"};","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from './Searchbar.module.css'\r\n\r\nexport class Searchbar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        return this.setState({ value: e.target.value })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmitForm(this.state.value);\r\n        this.setState({ value: '' })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <header className={css.searchbar}>\r\n                <form className={css.searchForm} onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className={css['searchForm-button']}>\r\n                        <span className={css['searchForm-button-label']}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        value={value}\r\n                        onInput={this.handleChange}\r\n                        className={css['searchForm-input']}\r\n                        type=\"text\"\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmitForm: PropTypes.func.isRequired\r\n}","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from './ImageGalleryItem.module.css'\r\n\r\nexport class ImageGalerryItem extends Component {\r\n    render() {\r\n\r\n        const { webformatURL, onSelectImg, largeImageURL } = this.props;\r\n\r\n        return (\r\n            <li className={css.imageGalleryItem} onClick={(() => onSelectImg(largeImageURL))}>\r\n                <img src={webformatURL} alt=\"\" className={css['imageGalleryItem-image']} />\r\n            </li>)\r\n    }\r\n\r\n}\r\n\r\nImageGalerryItem.propTypes = {\r\n    largeImageURL: PropTypes.string,\r\n    webformatURL: PropTypes.string,\r\n    onSelectImg: PropTypes.func\r\n}","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { ImageGalerryItem } from '../ImageGalleryItem/ImageGalleryItem'\r\nimport css from './ImageGallery.module.css'\r\n\r\nexport class ImageGallery extends Component {\r\n    render() {\r\n\r\n        const { images, onSelectedImg } = this.props;\r\n\r\n        return (\r\n            <ul className={css.imageGallery}>{\r\n                images.map(img => {\r\n                    return (\r\n                        <ImageGalerryItem key={img.id} largeImageURL={img.largeImageURL} webformatURL={img.webformatURL} onSelectImg={onSelectedImg} />\r\n\r\n                    )\r\n                })\r\n            }</ul>\r\n        )\r\n    }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.array,\r\n    onSelectedImg: PropTypes.func.isRequired\r\n}\r\n","const key = '22659523-ac255ed135817256fe2f96438'\r\n\r\nexport const searchImg = (input, page) => {\r\n    const response = fetch(`https://pixabay.com/api/?q=${input}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`);\r\n    return response;\r\n}","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from './Button.module.css';\r\n\r\nexport class Button extends Component {\r\n    render() {\r\n\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className={css.wrap}>\r\n                <button type='button' className={css.button} onClick={onClick}>Load more</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport css from './Spiner.module.css'\r\n\r\nexport class Spiner extends Component {\r\n    render() {\r\n        return (\r\n            <div className={css.wrap}>\r\n                <Loader\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Modal.module.css'\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n        disableBodyScroll(modalRoot);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n        enableBodyScroll(modalRoot);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onCloseModal();\r\n        }\r\n    }\r\n\r\n    handleClickModal = e => {\r\n        if (e.target === e.currentTarget) {\r\n            this.props.onCloseModal();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className={css.overlay} onClick={this.handleClickModal}>\r\n                <div className={css.modal}>\r\n                    <img src={this.props.largeImg} alt=\"img\" />\r\n                </div>\r\n            </div>, modalRoot)\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    largeImg: PropTypes.string,\r\n    onCloseModal: PropTypes.func\r\n}","import { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport css from './Message.module.css'\r\n\r\nexport class Message extends Component {\r\n    render() {\r\n\r\n        const { error } = this.props;\r\n\r\n        return (\r\n            <div className={css.wrap}>\r\n                <h1 className={css.title}>{\r\n                    error ? error : 'Please, enter the correct name for your search'\r\n                }</h1>\r\n            </div>)\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    error: PropTypes.string\r\n}","import { Component } from 'react';\nimport { Searchbar } from './components/Searchbar/Searchbar'\nimport { ImageGallery } from './components/ImageGallery/ImageGallery'\nimport { searchImg } from './store/request'\nimport { Button } from './components/Button/Button';\nimport { Spiner } from './components/Spiner/Spiner';\nimport { Modal } from './components/Modal/Modal';\nimport { Message } from './components/Message/Message'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    page: 1,\n    images: [],\n    input: '',\n    largeImg: null,\n    status: 'idle',\n    error: ''\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { input, page } = this.state;\n    const inputPrev = prevState.input;\n    const pagePrev = prevState.page;\n    const imagesPrev = prevState.images;\n\n    const conditionFirstRequest = inputPrev !== input && page === 1;\n\n    if (conditionFirstRequest) {\n      searchImg(input, page)\n        .then(res => res.json())\n        .then(res => {\n          if (res.total === 0) {\n            return this.setState({ status: 'rejected' })\n          }\n          this.setState({ images: res.hits, status: 'resolved' })\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n\n    const conditionSecondRequest = pagePrev !== page && page !== 1;\n\n    if (conditionSecondRequest) {\n      searchImg(input, page)\n        .then(res => res.json())\n        .then(res => this.setState(() => ({ images: [...imagesPrev, ...res.hits], status: 'resolved' })))\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  };\n\n  resetPageNumber = () => {\n    this.setState({ page: 1 })\n  };\n\n  updatePageNumber = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  onSearchValueInput = (value) => {\n    this.setState({ input: value, status: 'pending' });\n    this.resetPageNumber();\n  };\n\n  onFoundLargeImg = (value) => {\n    this.setState({ largeImg: value, status: 'openModal' });\n  }\n\n  onResetLargeImg = () => {\n    this.setState({ largeImg: null, status: 'resolved' })\n  }\n\n  render() {\n\n    const { status, images, largeImg, error } = this.state;\n\n    if (status === 'idle') {\n      return <Searchbar onSubmitForm={this.onSearchValueInput} />\n    }\n\n    if (status === 'pending') {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <Spiner />\n        </div>)\n    }\n\n    if (status === 'resolved') {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <ImageGallery images={images} onSelectedImg={this.onFoundLargeImg} />\n          <Button onClick={this.updatePageNumber} />\n        </div>)\n    }\n\n    if (status === 'openModal') {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <ImageGallery images={images} onSelectedImg={this.onFoundLargeImg} />\n          <Modal largeImg={largeImg} onCloseModal={this.onResetLargeImg} />\n        </div>\n      )\n    }\n\n    if (status === 'rejected') {\n      return (\n        <div>\n          <Searchbar onSubmitForm={this.onSearchValueInput} />\n          <Message error={error} />\n        </div>)\n    }\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3aD4Z\",\"searchForm\":\"Searchbar_searchForm__3h2Fg\",\"searchForm-button\":\"Searchbar_searchForm-button__1i10q\",\"searchForm-button-label\":\"Searchbar_searchForm-button-label__y3dFM\",\"searchForm-input\":\"Searchbar_searchForm-input__2TIXH\"};"],"sourceRoot":""}